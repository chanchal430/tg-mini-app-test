"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3669],{39220:(e,t,o)=>{o(93026)},50136:(e,t,o)=>{var r=o(1850),a=o(58446);o(56349),o(53059);var n=o(54684),s=o(51127);o(49145);let i=(0,r.AH)`
  :host {
    display: block;
  }

  :host > button {
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-1xs);
    height: 40px;
    border-radius: var(--wui-border-radius-l);
    background: var(--wui-color-gray-glass-002);
    border-width: 0px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
  }

  :host > button wui-image {
    width: 24px;
    height: 24px;
    border-radius: var(--wui-border-radius-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`;var c=function(e,t,o,r){var a,n=arguments.length,s=n<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(n<3?a(s):n>3?a(t,o,s):a(t,o))||s);return n>3&&s&&Object.defineProperty(t,o,s),s};let l=class extends r.WF{constructor(){super(...arguments),this.text=""}render(){return(0,r.qy)`
      <button>
        ${this.tokenTemplate()}
        <wui-text variant="paragraph-600" color="fg-100">${this.text}</wui-text>
      </button>
    `}tokenTemplate(){return this.imageSrc?(0,r.qy)`<wui-image src=${this.imageSrc}></wui-image>`:(0,r.qy)`
      <wui-icon-box
        size="sm"
        iconColor="fg-200"
        backgroundColor="fg-300"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `}};l.styles=[n.W5,n.fD,i],c([(0,a.MZ)()],l.prototype,"imageSrc",void 0),c([(0,a.MZ)()],l.prototype,"text",void 0),l=c([(0,s.E)("wui-token-button")],l)},56349:(e,t,o)=>{var r=o(1850),a=o(58446),n=o(54684),s=o(51127);let i=(0,r.AH)`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
  }

  :host([data-object-fit='cover']) img {
    object-fit: cover;
    object-position: center center;
  }

  :host([data-object-fit='contain']) img {
    object-fit: contain;
    object-position: center center;
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    border-radius: inherit;
  }
`;var c=function(e,t,o,r){var a,n=arguments.length,s=n<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(n<3?a(s):n>3?a(t,o,s):a(t,o))||s);return n>3&&s&&Object.defineProperty(t,o,s),s};let l=class extends r.WF{constructor(){super(...arguments),this.src="./path/to/image.jpg",this.alt="Image",this.size=void 0,this.objectFit="cover"}render(){return this.objectFit&&(this.dataset.objectFit=this.objectFit),this.style.cssText=`
      --local-width: ${this.size?`var(--wui-icon-size-${this.size});`:"100%"};
      --local-height: ${this.size?`var(--wui-icon-size-${this.size});`:"100%"};
      `,(0,r.qy)`<img src=${this.src} alt=${this.alt} @error=${this.handleImageError} />`}handleImageError(){this.dispatchEvent(new CustomEvent("onLoadError",{bubbles:!0,composed:!0}))}};l.styles=[n.W5,n.ck,i],c([(0,a.MZ)()],l.prototype,"src",void 0),c([(0,a.MZ)()],l.prototype,"alt",void 0),c([(0,a.MZ)()],l.prototype,"size",void 0),c([(0,a.MZ)()],l.prototype,"objectFit",void 0),l=c([(0,s.E)("wui-image")],l)},80729:(e,t,o)=>{o(23456)},86847:(e,t,o)=>{o.d(t,{GN:()=>N});var r=o(98749),a=o(81334),n=o(99400),s=o(96853),i=o(36421),c=o(42745),l=o(81805),u=o(22797),d=o(21159),T=o(201);let k={getGasPriceInEther:(e,t)=>Number(t*e)/1e18,getGasPriceInUSD(e,t,o){let r=k.getGasPriceInEther(t,o);return n.S.bigNumber(e).times(r).toNumber()},getPriceImpact({sourceTokenAmount:e,sourceTokenPriceInUSD:t,toTokenPriceInUSD:o,toTokenAmount:r}){let a=n.S.bigNumber(e).times(t),s=n.S.bigNumber(r).times(o);return a.minus(s).div(a).times(100).toNumber()},getMaxSlippage(e,t){let o=n.S.bigNumber(e).div(100);return n.S.multiply(t,o).toNumber()},getProviderFee:(e,t=.0085)=>n.S.bigNumber(e).times(t).toString(),isInsufficientNetworkTokenForGas:(e,t)=>!!n.S.bigNumber(e).eq(0)||n.S.bigNumber(n.S.bigNumber(t||"0")).gt(e),isInsufficientSourceTokenForSwap(e,t,o){let r=o?.find(e=>e.address===t)?.quantity?.numeric;return n.S.bigNumber(r||"0").lt(e)},getToTokenAmount({sourceToken:e,toToken:t,sourceTokenPrice:o,toTokenPrice:r,sourceTokenAmount:a}){if("0"===a||!e||!t)return"0";let s=e.decimals,i=t.decimals;if(r<=0)return"0";let c=n.S.bigNumber(a).times(.0085),l=n.S.bigNumber(a).minus(c).times(n.S.bigNumber(10).pow(s)),u=n.S.bigNumber(o).div(r),d=s-i;return l.times(u).div(n.S.bigNumber(10).pow(d)).div(n.S.bigNumber(10).pow(i)).toFixed(i).toString()}};var g=o(41228),m=o(85859),p=o(91986),w=o(7022),h=o(933),S=o(72636),b=o(70803),A=o(24101),P=o(51105),v=o(82570);let f={initializing:!1,initialized:!1,loadingPrices:!1,loadingQuote:!1,loadingApprovalTransaction:!1,loadingBuildTransaction:!1,loadingTransaction:!1,fetchError:!1,approvalTransaction:void 0,swapTransaction:void 0,transactionError:void 0,sourceToken:void 0,sourceTokenAmount:"",sourceTokenPriceInUSD:0,toToken:void 0,toTokenAmount:"",toTokenPriceInUSD:0,networkPrice:"0",networkBalanceInUSD:"0",networkTokenSymbol:"",inputError:void 0,slippage:u.oU.CONVERT_SLIPPAGE_TOLERANCE,tokens:void 0,popularTokens:void 0,suggestedTokens:void 0,foundTokens:void 0,myTokensWithBalance:void 0,tokensPriceMap:{},gasFee:"0",gasPriceInUSD:0,priceImpact:void 0,maxSlippage:void 0,providerFee:void 0},y=(0,r.BX)(f),I={state:y,subscribe:e=>(0,r.B1)(y,()=>e(y)),subscribeKey:(e,t)=>(0,a.u$)(y,e,t),getParams(){let e=h.W.state.activeCaipAddress,t=d.w.getPlainAddress(e),o=(0,l.K1)(),r=b.a.getConnectorId(h.W.state.activeChain);if(!t)throw Error("No address found to swap the tokens from.");let a=!y.toToken?.address||!y.toToken?.decimals,i=!y.sourceToken?.address||!y.sourceToken?.decimals||!n.S.bigNumber(y.sourceTokenAmount).gt(0),c=!y.sourceTokenAmount;return{networkAddress:o,fromAddress:t,fromCaipAddress:e,sourceTokenAddress:y.sourceToken?.address,toTokenAddress:y.toToken?.address,toTokenAmount:y.toTokenAmount,toTokenDecimals:y.toToken?.decimals,sourceTokenAmount:y.sourceTokenAmount,sourceTokenDecimals:y.sourceToken?.decimals,invalidToToken:a,invalidSourceToken:i,invalidSourceTokenAmount:c,availableToSwap:e&&!a&&!i&&!c,isAuthConnector:r===s.o.CONNECTOR_ID.AUTH}},setSourceToken(e){if(!e){y.sourceToken=e,y.sourceTokenAmount="",y.sourceTokenPriceInUSD=0;return}y.sourceToken=e,N.setTokenPrice(e.address,"sourceToken")},setSourceTokenAmount(e){y.sourceTokenAmount=e},setToToken(e){if(!e){y.toToken=e,y.toTokenAmount="",y.toTokenPriceInUSD=0;return}y.toToken=e,N.setTokenPrice(e.address,"toToken")},setToTokenAmount(e){y.toTokenAmount=e?n.S.formatNumberToLocalString(e,6):""},async setTokenPrice(e,t){let o=y.tokensPriceMap[e]||0;o||(y.loadingPrices=!0,o=await N.getAddressPrice(e)),"sourceToken"===t?y.sourceTokenPriceInUSD=o:"toToken"===t&&(y.toTokenPriceInUSD=o),y.loadingPrices&&(y.loadingPrices=!1),N.getParams().availableToSwap&&N.swapTokens()},switchTokens(){if(y.initializing||!y.initialized)return;let e=y.toToken?{...y.toToken}:void 0,t=y.sourceToken?{...y.sourceToken}:void 0,o=e&&""===y.toTokenAmount?"1":y.toTokenAmount;N.setSourceToken(e),N.setToToken(t),N.setSourceTokenAmount(o),N.setToTokenAmount(""),N.swapTokens()},resetState(){y.myTokensWithBalance=f.myTokensWithBalance,y.tokensPriceMap=f.tokensPriceMap,y.initialized=f.initialized,y.sourceToken=f.sourceToken,y.sourceTokenAmount=f.sourceTokenAmount,y.sourceTokenPriceInUSD=f.sourceTokenPriceInUSD,y.toToken=f.toToken,y.toTokenAmount=f.toTokenAmount,y.toTokenPriceInUSD=f.toTokenPriceInUSD,y.networkPrice=f.networkPrice,y.networkTokenSymbol=f.networkTokenSymbol,y.networkBalanceInUSD=f.networkBalanceInUSD,y.inputError=f.inputError,y.myTokensWithBalance=f.myTokensWithBalance},resetValues(){let{networkAddress:e}=N.getParams(),t=y.tokens?.find(t=>t.address===e);N.setSourceToken(t),N.setToToken(void 0)},getApprovalLoadingState:()=>y.loadingApprovalTransaction,clearError(){y.transactionError=void 0},async initializeState(){if(!y.initializing){if(y.initializing=!0,!y.initialized)try{await N.fetchTokens(),y.initialized=!0}catch(e){y.initialized=!1,v.P.showError("Failed to initialize swap"),P.I.goBack()}y.initializing=!1}},async fetchTokens(){let{networkAddress:e}=N.getParams();await N.getTokenList(),await N.getNetworkTokenPrice(),await N.getMyTokensWithBalance();let t=y.tokens?.find(t=>t.address===e);t&&(y.networkTokenSymbol=t.symbol,N.setSourceToken(t),N.setSourceTokenAmount("1"))},async getTokenList(){let e=await T.s.getTokenList();y.tokens=e,y.popularTokens=e.sort((e,t)=>e.symbol<t.symbol?-1:+(e.symbol>t.symbol)),y.suggestedTokens=e.filter(e=>!!u.oU.SWAP_SUGGESTED_TOKENS.includes(e.symbol),{})},async getAddressPrice(e){let t=y.tokensPriceMap[e];if(t)return t;let o=await w.T.fetchTokenPrice({addresses:[e]}),r=o?.fungibles||[],a=[...y.tokens||[],...y.myTokensWithBalance||[]],n=a?.find(t=>t.address===e)?.symbol,s=parseFloat((r.find(e=>e.symbol.toLowerCase()===n?.toLowerCase())?.price||0).toString());return y.tokensPriceMap[e]=s,s},async getNetworkTokenPrice(){let{networkAddress:e}=N.getParams(),t=await w.T.fetchTokenPrice({addresses:[e]}).catch(()=>(v.P.showError("Failed to fetch network token price"),{fungibles:[]})),o=t.fungibles?.[0],r=o?.price.toString()||"0";y.tokensPriceMap[e]=parseFloat(r),y.networkTokenSymbol=o?.symbol||"",y.networkPrice=r},async getMyTokensWithBalance(e){let t=await c.Z.getMyTokensWithBalance(e),o=T.s.mapBalancesToSwapTokens(t);o&&(await N.getInitialGasPrice(),N.setBalances(o))},setBalances(e){let{networkAddress:t}=N.getParams(),o=h.W.state.activeCaipNetwork;if(!o)return;let r=e.find(e=>e.address===t);e.forEach(e=>{y.tokensPriceMap[e.address]=e.price||0}),y.myTokensWithBalance=e.filter(e=>e.address.startsWith(o.caipNetworkId)),y.networkBalanceInUSD=r?n.S.multiply(r.quantity.numeric,r.price).toString():"0"},async getInitialGasPrice(){let e=await T.s.fetchGasPrice();if(!e)return{gasPrice:null,gasPriceInUSD:null};switch(h.W.state?.activeCaipNetwork?.chainNamespace){case s.o.CHAIN.SOLANA:return y.gasFee=e.standard??"0",y.gasPriceInUSD=n.S.multiply(e.standard,y.networkPrice).div(1e9).toNumber(),{gasPrice:BigInt(y.gasFee),gasPriceInUSD:Number(y.gasPriceInUSD)};case s.o.CHAIN.EVM:default:let t=e.standard??"0",o=BigInt(t),r=BigInt(15e4),a=k.getGasPriceInUSD(y.networkPrice,r,o);return y.gasFee=t,y.gasPriceInUSD=a,{gasPrice:o,gasPriceInUSD:a}}},async swapTokens(){let e=m.U.state.address,t=y.sourceToken,o=y.toToken,r=n.S.bigNumber(y.sourceTokenAmount).gt(0);if(r||N.setToTokenAmount(""),!o||!t||y.loadingPrices||!r)return;y.loadingQuote=!0;let a=n.S.bigNumber(y.sourceTokenAmount).times(10**t.decimals).round(0);try{let r=await w.T.fetchSwapQuote({userAddress:e,from:t.address,to:o.address,gasPrice:y.gasFee,amount:a.toString()});y.loadingQuote=!1;let s=r?.quotes?.[0]?.toAmount;if(!s)return void p.h.open({shortMessage:"Incorrect amount",longMessage:"Please enter a valid amount"},"error");let i=n.S.bigNumber(s).div(10**o.decimals).toString();N.setToTokenAmount(i),N.hasInsufficientToken(y.sourceTokenAmount,t.address)?y.inputError="Insufficient balance":(y.inputError=void 0,N.setTransactionDetails())}catch(e){y.loadingQuote=!1,y.inputError="Insufficient balance"}},async getTransaction(){let{fromCaipAddress:e,availableToSwap:t}=N.getParams(),o=y.sourceToken,r=y.toToken;if(e&&t&&o&&r&&!y.loadingQuote)try{let t;return y.loadingBuildTransaction=!0,t=await T.s.fetchSwapAllowance({userAddress:e,tokenAddress:o.address,sourceTokenAmount:y.sourceTokenAmount,sourceTokenDecimals:o.decimals})?await N.createSwapTransaction():await N.createAllowanceTransaction(),y.loadingBuildTransaction=!1,y.fetchError=!1,t}catch(e){P.I.goBack(),v.P.showError("Failed to check allowance"),y.loadingBuildTransaction=!1,y.approvalTransaction=void 0,y.swapTransaction=void 0,y.fetchError=!0;return}},async createAllowanceTransaction(){let{fromCaipAddress:e,sourceTokenAddress:t,toTokenAddress:o}=N.getParams();if(e&&o){if(!t)throw Error("createAllowanceTransaction - No source token address found.");try{let r=await w.T.generateApproveCalldata({from:t,to:o,userAddress:e}),a=d.w.getPlainAddress(r.tx.from);if(!a)throw Error("SwapController:createAllowanceTransaction - address is required");let n={data:r.tx.data,to:a,gasPrice:BigInt(r.tx.eip155.gasPrice),value:BigInt(r.tx.value),toAmount:y.toTokenAmount};return y.swapTransaction=void 0,y.approvalTransaction={data:n.data,to:n.to,gasPrice:n.gasPrice,value:n.value,toAmount:n.toAmount},{data:n.data,to:n.to,gasPrice:n.gasPrice,value:n.value,toAmount:n.toAmount}}catch(e){P.I.goBack(),v.P.showError("Failed to create approval transaction"),y.approvalTransaction=void 0,y.swapTransaction=void 0,y.fetchError=!0;return}}},async createSwapTransaction(){let{networkAddress:e,fromCaipAddress:t,sourceTokenAmount:o}=N.getParams(),r=y.sourceToken,a=y.toToken;if(!t||!o||!r||!a)return;let n=S.x.parseUnits(o,r.decimals)?.toString();try{let o=await w.T.generateSwapCalldata({userAddress:t,from:r.address,to:a.address,amount:n,disableEstimate:!0}),s=r.address===e,i=BigInt(o.tx.eip155.gas),c=BigInt(o.tx.eip155.gasPrice),l=d.w.getPlainAddress(o.tx.to);if(!l)throw Error("SwapController:createSwapTransaction - address is required");let u={data:o.tx.data,to:l,gas:i,gasPrice:c,value:s?BigInt(n??"0"):BigInt("0"),toAmount:y.toTokenAmount};return y.gasPriceInUSD=k.getGasPriceInUSD(y.networkPrice,i,c),y.approvalTransaction=void 0,y.swapTransaction=u,u}catch(e){P.I.goBack(),v.P.showError("Failed to create transaction"),y.approvalTransaction=void 0,y.swapTransaction=void 0,y.fetchError=!0;return}},async sendTransactionForApproval(e){let{fromAddress:t,isAuthConnector:o}=N.getParams();y.loadingApprovalTransaction=!0;let r="Approve limit increase in your wallet";o?P.I.pushTransactionStack({onSuccess(){v.P.showLoading(r)}}):v.P.showLoading(r);try{await S.x.sendTransaction({address:t,to:e.to,data:e.data,value:e.value,chainNamespace:s.o.CHAIN.EVM}),await N.swapTokens(),await N.getTransaction(),y.approvalTransaction=void 0,y.loadingApprovalTransaction=!1}catch(e){y.transactionError=e?.shortMessage,y.loadingApprovalTransaction=!1,v.P.showError(e?.shortMessage||"Transaction error"),A.E.sendEvent({type:"track",event:"SWAP_APPROVAL_ERROR",properties:{message:e?.shortMessage||e?.message||"Unknown",network:h.W.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:N.state.sourceToken?.symbol||"",swapToToken:N.state.toToken?.symbol||"",swapFromAmount:N.state.sourceTokenAmount||"",swapToAmount:N.state.toTokenAmount||"",isSmartAccount:(0,l.lj)(s.o.CHAIN.EVM)===i.Vl.ACCOUNT_TYPES.SMART_ACCOUNT}})}},async sendTransactionForSwap(e){if(!e)return;let{fromAddress:t,toTokenAmount:o,isAuthConnector:r}=N.getParams();y.loadingTransaction=!0;let a=`Swapping ${y.sourceToken?.symbol} to ${n.S.formatNumberToLocalString(o,3)} ${y.toToken?.symbol}`,c=`Swapped ${y.sourceToken?.symbol} to ${n.S.formatNumberToLocalString(o,3)} ${y.toToken?.symbol}`;r?P.I.pushTransactionStack({onSuccess(){P.I.replace("Account"),v.P.showLoading(a),I.resetState()}}):v.P.showLoading("Confirm transaction in your wallet");try{let o=[y.sourceToken?.address,y.toToken?.address].join(","),a=await S.x.sendTransaction({address:t,to:e.to,data:e.data,value:e.value,chainNamespace:s.o.CHAIN.EVM});return y.loadingTransaction=!1,v.P.showSuccess(c),A.E.sendEvent({type:"track",event:"SWAP_SUCCESS",properties:{network:h.W.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:N.state.sourceToken?.symbol||"",swapToToken:N.state.toToken?.symbol||"",swapFromAmount:N.state.sourceTokenAmount||"",swapToAmount:N.state.toTokenAmount||"",isSmartAccount:(0,l.lj)(s.o.CHAIN.EVM)===i.Vl.ACCOUNT_TYPES.SMART_ACCOUNT}}),I.resetState(),r||P.I.replace("Account"),I.getMyTokensWithBalance(o),a}catch(e){y.transactionError=e?.shortMessage,y.loadingTransaction=!1,v.P.showError(e?.shortMessage||"Transaction error"),A.E.sendEvent({type:"track",event:"SWAP_ERROR",properties:{message:e?.shortMessage||e?.message||"Unknown",network:h.W.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:N.state.sourceToken?.symbol||"",swapToToken:N.state.toToken?.symbol||"",swapFromAmount:N.state.sourceTokenAmount||"",swapToAmount:N.state.toTokenAmount||"",isSmartAccount:(0,l.lj)(s.o.CHAIN.EVM)===i.Vl.ACCOUNT_TYPES.SMART_ACCOUNT}});return}},hasInsufficientToken:(e,t)=>k.isInsufficientSourceTokenForSwap(e,t,y.myTokensWithBalance),setTransactionDetails(){let{toTokenAddress:e,toTokenDecimals:t}=N.getParams();e&&t&&(y.gasPriceInUSD=k.getGasPriceInUSD(y.networkPrice,BigInt(y.gasFee),BigInt(15e4)),y.priceImpact=k.getPriceImpact({sourceTokenAmount:y.sourceTokenAmount,sourceTokenPriceInUSD:y.sourceTokenPriceInUSD,toTokenPriceInUSD:y.toTokenPriceInUSD,toTokenAmount:y.toTokenAmount}),y.maxSlippage=k.getMaxSlippage(y.slippage,y.toTokenAmount),y.providerFee=k.getProviderFee(y.sourceTokenAmount))}},N=(0,g.X)(I)}}]);